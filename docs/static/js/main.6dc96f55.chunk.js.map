{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","handleInputChange","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,IAnBG,SAAEA,GACxBF,EAAcE,EAAEQ,OAAOF,OAkBIG,CAAkBT,S,QCzBxCU,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCLJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCEPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAAEb,IAEIc,EDfwBK,CAAcnB,GAAlCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIjB,UAAU,oCAAd,SAAoDI,IAClDa,GAAW,mBAAGjB,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,WAAf,SAEQc,EAAOF,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAESA,GADCA,EAAIhB,aEUvB2B,EAvBM,WAEjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCblCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6dc96f55.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState ('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();         //ESTO EVITA QUE HAGA REFRESH LA PAGINA\r\n        //console.log('Submit hecho')\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={(e) => { handleInputChange(e) }}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=QUSLVPRjmag70g6cZXlCG3eQyy7MQ0AO`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        } \r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> } \r\n            {/* { loading? <p>Loading</p> : null } */}\r\n            <div className=\"cardGrid\">\r\n                {\r\n                    images.map( ( img ) => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n                {/* <ol>\r\n                    {\r\n                        images.map( ({id, title}) => (\r\n                            <li key={id} >\r\n                                {title}\r\n                            </li>\r\n                        ))\r\n                    } \r\n                </ol> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// el use significa que es un hook. todos los hooks empiezan con use\r\nimport { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [ category ]);\r\n\r\n    return ( state );\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GitExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category  => (\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />)\r\n                    )}\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GitExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GitExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}